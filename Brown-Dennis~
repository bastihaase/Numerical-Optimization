function Brown_Dennis(f,grad,J,JTJ,x_0,maxIter=100,atol=10.0^(-8),n,m)
	B=zeros(m,n,n)
	for i=1:m
		B[i]=approx_hessian(x->J[i,:]*x,x_0)
	end
	return B
end












function update_Matrix(x,r,B,JTJ)
	f=r(x)
	b=B(x)
	res=0
	for i=1:m
		res+=f[i]*B[i]
	end
	return res+JTJ(x)
end
	

function approx_action_of_hessian(grad,x,p,eps=10.0^(-6))
  return (grad(x+eps*p)-grad(x))/eps
end

function approx_hessian(grad,x,eps=10.0^(-6))
  n=size(x)[1]
  hess=zeros(n,n)
  for i = 1:n
    p=zeros(n)
    p[i]=1
    hess[:,i]=approx_action_of_hessian(grad,x,p,eps)
  end
  return hess
end
